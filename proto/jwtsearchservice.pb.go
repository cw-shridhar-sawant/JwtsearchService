// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.1
// source: jwtsearchservice.proto

package JwtsearchService

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Scoring struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProviderType string  `protobuf:"bytes,1,opt,name=provider_type,json=providerType,proto3" json:"provider_type,omitempty"`
	Value        float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Scoring) Reset() {
	*x = Scoring{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jwtsearchservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scoring) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scoring) ProtoMessage() {}

func (x *Scoring) ProtoReflect() protoreflect.Message {
	mi := &file_jwtsearchservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scoring.ProtoReflect.Descriptor instead.
func (*Scoring) Descriptor() ([]byte, []int) {
	return file_jwtsearchservice_proto_rawDescGZIP(), []int{0}
}

func (x *Scoring) GetProviderType() string {
	if x != nil {
		return x.ProviderType
	}
	return ""
}

func (x *Scoring) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Urls struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StandardWeb string `protobuf:"bytes,1,opt,name=standard_web,json=standardWeb,proto3" json:"standard_web,omitempty"`
}

func (x *Urls) Reset() {
	*x = Urls{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jwtsearchservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Urls) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Urls) ProtoMessage() {}

func (x *Urls) ProtoReflect() protoreflect.Message {
	mi := &file_jwtsearchservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Urls.ProtoReflect.Descriptor instead.
func (*Urls) Descriptor() ([]byte, []int) {
	return file_jwtsearchservice_proto_rawDescGZIP(), []int{1}
}

func (x *Urls) GetStandardWeb() string {
	if x != nil {
		return x.StandardWeb
	}
	return ""
}

type Offers struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Country          string  `protobuf:"bytes,1,opt,name=country,proto3" json:"country,omitempty"`
	JwEntityId       string  `protobuf:"bytes,2,opt,name=jw_entity_id,json=jwEntityId,proto3" json:"jw_entity_id,omitempty"`
	MonetizationType string  `protobuf:"bytes,3,opt,name=monetization_type,json=monetizationType,proto3" json:"monetization_type,omitempty"`
	ProviderId       float64 `protobuf:"fixed64,4,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	RetailPrice      float64 `protobuf:"fixed64,5,opt,name=retail_price,json=retailPrice,proto3" json:"retail_price,omitempty"`
	Currency         string  `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	Urls             *Urls   `protobuf:"bytes,7,opt,name=urls,proto3" json:"urls,omitempty"`
	PresentationType string  `protobuf:"bytes,8,opt,name=presentation_type,json=presentationType,proto3" json:"presentation_type,omitempty"`
}

func (x *Offers) Reset() {
	*x = Offers{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jwtsearchservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Offers) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offers) ProtoMessage() {}

func (x *Offers) ProtoReflect() protoreflect.Message {
	mi := &file_jwtsearchservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offers.ProtoReflect.Descriptor instead.
func (*Offers) Descriptor() ([]byte, []int) {
	return file_jwtsearchservice_proto_rawDescGZIP(), []int{2}
}

func (x *Offers) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Offers) GetJwEntityId() string {
	if x != nil {
		return x.JwEntityId
	}
	return ""
}

func (x *Offers) GetMonetizationType() string {
	if x != nil {
		return x.MonetizationType
	}
	return ""
}

func (x *Offers) GetProviderId() float64 {
	if x != nil {
		return x.ProviderId
	}
	return 0
}

func (x *Offers) GetRetailPrice() float64 {
	if x != nil {
		return x.RetailPrice
	}
	return 0
}

func (x *Offers) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Offers) GetUrls() *Urls {
	if x != nil {
		return x.Urls
	}
	return nil
}

func (x *Offers) GetPresentationType() string {
	if x != nil {
		return x.PresentationType
	}
	return ""
}

type FullPaths struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MOVIE_DETAIL_OVERVIEW string `protobuf:"bytes,1,opt,name=MOVIE_DETAIL_OVERVIEW,json=MOVIEDETAILOVERVIEW,proto3" json:"MOVIE_DETAIL_OVERVIEW,omitempty"`
}

func (x *FullPaths) Reset() {
	*x = FullPaths{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jwtsearchservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullPaths) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullPaths) ProtoMessage() {}

func (x *FullPaths) ProtoReflect() protoreflect.Message {
	mi := &file_jwtsearchservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullPaths.ProtoReflect.Descriptor instead.
func (*FullPaths) Descriptor() ([]byte, []int) {
	return file_jwtsearchservice_proto_rawDescGZIP(), []int{3}
}

func (x *FullPaths) GetMOVIE_DETAIL_OVERVIEW() string {
	if x != nil {
		return x.MOVIE_DETAIL_OVERVIEW
	}
	return ""
}

type Credits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role          string  `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	CharacterName string  `protobuf:"bytes,2,opt,name=character_name,json=characterName,proto3" json:"character_name,omitempty"`
	PersonId      float64 `protobuf:"fixed64,3,opt,name=person_id,json=personId,proto3" json:"person_id,omitempty"`
	Name          string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Credits) Reset() {
	*x = Credits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jwtsearchservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credits) ProtoMessage() {}

func (x *Credits) ProtoReflect() protoreflect.Message {
	mi := &file_jwtsearchservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credits.ProtoReflect.Descriptor instead.
func (*Credits) Descriptor() ([]byte, []int) {
	return file_jwtsearchservice_proto_rawDescGZIP(), []int{4}
}

func (x *Credits) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Credits) GetCharacterName() string {
	if x != nil {
		return x.CharacterName
	}
	return ""
}

func (x *Credits) GetPersonId() float64 {
	if x != nil {
		return x.PersonId
	}
	return 0
}

func (x *Credits) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type ExternalIds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider   string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	ExternalId string `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
}

func (x *ExternalIds) Reset() {
	*x = ExternalIds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jwtsearchservice_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExternalIds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalIds) ProtoMessage() {}

func (x *ExternalIds) ProtoReflect() protoreflect.Message {
	mi := &file_jwtsearchservice_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalIds.ProtoReflect.Descriptor instead.
func (*ExternalIds) Descriptor() ([]byte, []int) {
	return file_jwtsearchservice_proto_rawDescGZIP(), []int{5}
}

func (x *ExternalIds) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ExternalIds) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

type Backdrops struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackdropBlurHash string `protobuf:"bytes,1,opt,name=backdrop_blur_hash,json=backdropBlurHash,proto3" json:"backdrop_blur_hash,omitempty"`
	BackdropUrl      string `protobuf:"bytes,2,opt,name=backdrop_url,json=backdropUrl,proto3" json:"backdrop_url,omitempty"`
}

func (x *Backdrops) Reset() {
	*x = Backdrops{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jwtsearchservice_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Backdrops) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Backdrops) ProtoMessage() {}

func (x *Backdrops) ProtoReflect() protoreflect.Message {
	mi := &file_jwtsearchservice_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Backdrops.ProtoReflect.Descriptor instead.
func (*Backdrops) Descriptor() ([]byte, []int) {
	return file_jwtsearchservice_proto_rawDescGZIP(), []int{6}
}

func (x *Backdrops) GetBackdropBlurHash() string {
	if x != nil {
		return x.BackdropBlurHash
	}
	return ""
}

func (x *Backdrops) GetBackdropUrl() string {
	if x != nil {
		return x.BackdropUrl
	}
	return ""
}

type Clips struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Provider   string `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	ExternalId string `protobuf:"bytes,3,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	Name       string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Clips) Reset() {
	*x = Clips{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jwtsearchservice_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Clips) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clips) ProtoMessage() {}

func (x *Clips) ProtoReflect() protoreflect.Message {
	mi := &file_jwtsearchservice_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clips.ProtoReflect.Descriptor instead.
func (*Clips) Descriptor() ([]byte, []int) {
	return file_jwtsearchservice_proto_rawDescGZIP(), []int{7}
}

func (x *Clips) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Clips) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *Clips) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *Clips) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Tile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShortDescription     string         `protobuf:"bytes,1,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	OriginalReleaseYear  float64        `protobuf:"fixed64,2,opt,name=original_release_year,json=originalReleaseYear,proto3" json:"original_release_year,omitempty"`
	OriginalTitle        string         `protobuf:"bytes,3,opt,name=original_title,json=originalTitle,proto3" json:"original_title,omitempty"`
	Scoring              []*Scoring     `protobuf:"bytes,4,rep,name=scoring,proto3" json:"scoring,omitempty"`
	ProductionCountries  []string       `protobuf:"bytes,5,rep,name=production_countries,json=productionCountries,proto3" json:"production_countries,omitempty"`
	Title                string         `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	FullPath             string         `protobuf:"bytes,7,opt,name=full_path,json=fullPath,proto3" json:"full_path,omitempty"`
	Poster               string         `protobuf:"bytes,8,opt,name=poster,proto3" json:"poster,omitempty"`
	Offers               []*Offers      `protobuf:"bytes,9,rep,name=offers,proto3" json:"offers,omitempty"`
	Runtime              float64        `protobuf:"fixed64,10,opt,name=runtime,proto3" json:"runtime,omitempty"`
	Sources              []string       `protobuf:"bytes,11,rep,name=sources,proto3" json:"sources,omitempty"`
	GenreIds             []string       `protobuf:"bytes,12,rep,name=genre_ids,json=genreIds,proto3" json:"genre_ids,omitempty"`
	AgeCertification     string         `protobuf:"bytes,13,opt,name=age_certification,json=ageCertification,proto3" json:"age_certification,omitempty"`
	JwEntityId           string         `protobuf:"bytes,14,opt,name=jw_entity_id,json=jwEntityId,proto3" json:"jw_entity_id,omitempty"`
	Id                   float64        `protobuf:"fixed64,15,opt,name=id,proto3" json:"id,omitempty"`
	FullPaths            *FullPaths     `protobuf:"bytes,16,opt,name=full_paths,json=fullPaths,proto3" json:"full_paths,omitempty"`
	ObjectType           string         `protobuf:"bytes,17,opt,name=object_type,json=objectType,proto3" json:"object_type,omitempty"`
	Credits              []*Credits     `protobuf:"bytes,18,rep,name=credits,proto3" json:"credits,omitempty"`
	ExternalIds          []*ExternalIds `protobuf:"bytes,19,rep,name=external_ids,json=externalIds,proto3" json:"external_ids,omitempty"`
	PermanentAudiences   []string       `protobuf:"bytes,20,rep,name=permanent_audiences,json=permanentAudiences,proto3" json:"permanent_audiences,omitempty"`
	PosterBlurHash       string         `protobuf:"bytes,21,opt,name=poster_blur_hash,json=posterBlurHash,proto3" json:"poster_blur_hash,omitempty"`
	Backdrops            []*Backdrops   `protobuf:"bytes,22,rep,name=backdrops,proto3" json:"backdrops,omitempty"`
	LocalizedReleaseDate string         `protobuf:"bytes,23,opt,name=localized_release_date,json=localizedReleaseDate,proto3" json:"localized_release_date,omitempty"`
	Clips                []*Clips       `protobuf:"bytes,24,rep,name=clips,proto3" json:"clips,omitempty"`
	CinemaReleaseDate    string         `protobuf:"bytes,25,opt,name=cinema_release_date,json=cinemaReleaseDate,proto3" json:"cinema_release_date,omitempty"`
}

func (x *Tile) Reset() {
	*x = Tile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jwtsearchservice_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tile) ProtoMessage() {}

func (x *Tile) ProtoReflect() protoreflect.Message {
	mi := &file_jwtsearchservice_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tile.ProtoReflect.Descriptor instead.
func (*Tile) Descriptor() ([]byte, []int) {
	return file_jwtsearchservice_proto_rawDescGZIP(), []int{8}
}

func (x *Tile) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *Tile) GetOriginalReleaseYear() float64 {
	if x != nil {
		return x.OriginalReleaseYear
	}
	return 0
}

func (x *Tile) GetOriginalTitle() string {
	if x != nil {
		return x.OriginalTitle
	}
	return ""
}

func (x *Tile) GetScoring() []*Scoring {
	if x != nil {
		return x.Scoring
	}
	return nil
}

func (x *Tile) GetProductionCountries() []string {
	if x != nil {
		return x.ProductionCountries
	}
	return nil
}

func (x *Tile) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Tile) GetFullPath() string {
	if x != nil {
		return x.FullPath
	}
	return ""
}

func (x *Tile) GetPoster() string {
	if x != nil {
		return x.Poster
	}
	return ""
}

func (x *Tile) GetOffers() []*Offers {
	if x != nil {
		return x.Offers
	}
	return nil
}

func (x *Tile) GetRuntime() float64 {
	if x != nil {
		return x.Runtime
	}
	return 0
}

func (x *Tile) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *Tile) GetGenreIds() []string {
	if x != nil {
		return x.GenreIds
	}
	return nil
}

func (x *Tile) GetAgeCertification() string {
	if x != nil {
		return x.AgeCertification
	}
	return ""
}

func (x *Tile) GetJwEntityId() string {
	if x != nil {
		return x.JwEntityId
	}
	return ""
}

func (x *Tile) GetId() float64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Tile) GetFullPaths() *FullPaths {
	if x != nil {
		return x.FullPaths
	}
	return nil
}

func (x *Tile) GetObjectType() string {
	if x != nil {
		return x.ObjectType
	}
	return ""
}

func (x *Tile) GetCredits() []*Credits {
	if x != nil {
		return x.Credits
	}
	return nil
}

func (x *Tile) GetExternalIds() []*ExternalIds {
	if x != nil {
		return x.ExternalIds
	}
	return nil
}

func (x *Tile) GetPermanentAudiences() []string {
	if x != nil {
		return x.PermanentAudiences
	}
	return nil
}

func (x *Tile) GetPosterBlurHash() string {
	if x != nil {
		return x.PosterBlurHash
	}
	return ""
}

func (x *Tile) GetBackdrops() []*Backdrops {
	if x != nil {
		return x.Backdrops
	}
	return nil
}

func (x *Tile) GetLocalizedReleaseDate() string {
	if x != nil {
		return x.LocalizedReleaseDate
	}
	return ""
}

func (x *Tile) GetClips() []*Clips {
	if x != nil {
		return x.Clips
	}
	return nil
}

func (x *Tile) GetCinemaReleaseDate() string {
	if x != nil {
		return x.CinemaReleaseDate
	}
	return ""
}

type Row struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tiles []*Tile `protobuf:"bytes,1,rep,name=tiles,proto3" json:"tiles,omitempty"`
}

func (x *Row) Reset() {
	*x = Row{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jwtsearchservice_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Row) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Row) ProtoMessage() {}

func (x *Row) ProtoReflect() protoreflect.Message {
	mi := &file_jwtsearchservice_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Row.ProtoReflect.Descriptor instead.
func (*Row) Descriptor() ([]byte, []int) {
	return file_jwtsearchservice_proto_rawDescGZIP(), []int{9}
}

func (x *Row) GetTiles() []*Tile {
	if x != nil {
		return x.Tiles
	}
	return nil
}

type TvInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	//string query = 1 [(validator.field) = {
	// msg_exists : true
	// string_not_empty : true
	// human_error: "Query cannot be empty."
	//}];
	Query      string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Emac       string   `protobuf:"bytes,2,opt,name=emac,proto3" json:"emac,omitempty"`
	Board      string   `protobuf:"bytes,3,opt,name=board,proto3" json:"board,omitempty"`
	Brand      string   `protobuf:"bytes,4,opt,name=brand,proto3" json:"brand,omitempty"`
	Vendor     string   `protobuf:"bytes,5,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Genres     []string `protobuf:"bytes,6,rep,name=genres,proto3" json:"genres,omitempty"`
	Cast       []string `protobuf:"bytes,7,rep,name=cast,proto3" json:"cast,omitempty"`
	Categories []string `protobuf:"bytes,8,rep,name=categories,proto3" json:"categories,omitempty"`
	Sources    []string `protobuf:"bytes,9,rep,name=sources,proto3" json:"sources,omitempty"`
	Languages  []string `protobuf:"bytes,10,rep,name=languages,proto3" json:"languages,omitempty"`
}

func (x *TvInfo) Reset() {
	*x = TvInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_jwtsearchservice_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TvInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TvInfo) ProtoMessage() {}

func (x *TvInfo) ProtoReflect() protoreflect.Message {
	mi := &file_jwtsearchservice_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TvInfo.ProtoReflect.Descriptor instead.
func (*TvInfo) Descriptor() ([]byte, []int) {
	return file_jwtsearchservice_proto_rawDescGZIP(), []int{10}
}

func (x *TvInfo) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *TvInfo) GetEmac() string {
	if x != nil {
		return x.Emac
	}
	return ""
}

func (x *TvInfo) GetBoard() string {
	if x != nil {
		return x.Board
	}
	return ""
}

func (x *TvInfo) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *TvInfo) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *TvInfo) GetGenres() []string {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *TvInfo) GetCast() []string {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *TvInfo) GetCategories() []string {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *TvInfo) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *TvInfo) GetLanguages() []string {
	if x != nil {
		return x.Languages
	}
	return nil
}

var File_jwtsearchservice_proto protoreflect.FileDescriptor

var file_jwtsearchservice_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6a, 0x77, 0x74, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x4a, 0x77, 0x74, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x07, 0x53, 0x63, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x29, 0x0a, 0x04,
	0x55, 0x72, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x5f, 0x77, 0x65, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x6e,
	0x64, 0x61, 0x72, 0x64, 0x57, 0x65, 0x62, 0x22, 0xaa, 0x02, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x65,
	0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0c,
	0x6a, 0x77, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6a, 0x77, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x2b,
	0x0a, 0x11, 0x6d, 0x6f, 0x6e, 0x65, 0x74, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x6f, 0x6e, 0x65, 0x74,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x2a, 0x0a, 0x04, 0x75,
	0x72, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4a, 0x77, 0x74, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x72, 0x6c,
	0x73, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x40, 0x0a, 0x0a, 0x46, 0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x61, 0x74,
	0x68, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x4d, 0x4f, 0x56, 0x49, 0x45, 0x5f, 0x44, 0x45, 0x54, 0x41,
	0x49, 0x4c, 0x5f, 0x4f, 0x56, 0x45, 0x52, 0x56, 0x49, 0x45, 0x57, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x4d, 0x4f, 0x56, 0x49, 0x45, 0x44, 0x45, 0x54, 0x41, 0x49, 0x4c, 0x4f, 0x56,
	0x45, 0x52, 0x56, 0x49, 0x45, 0x57, 0x22, 0x75, 0x0a, 0x07, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4b, 0x0a,
	0x0c, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x22, 0x5c, 0x0a, 0x09, 0x42, 0x61,
	0x63, 0x6b, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x61, 0x63, 0x6b, 0x64,
	0x72, 0x6f, 0x70, 0x5f, 0x62, 0x6c, 0x75, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x61, 0x63, 0x6b, 0x64, 0x72, 0x6f, 0x70, 0x42, 0x6c, 0x75,
	0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x64, 0x72, 0x6f,
	0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x63,
	0x6b, 0x64, 0x72, 0x6f, 0x70, 0x55, 0x72, 0x6c, 0x22, 0x6c, 0x0a, 0x05, 0x43, 0x6c, 0x69, 0x70,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa4, 0x08, 0x0a, 0x04, 0x54, 0x69, 0x6c, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x59, 0x65, 0x61, 0x72,
	0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x73, 0x63, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4a, 0x77, 0x74, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x52, 0x07, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x14,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x4a, 0x77, 0x74,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x66,
	0x66, 0x65, 0x72, 0x73, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x72,
	0x75, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x49, 0x64, 0x73, 0x12, 0x2b, 0x0a,
	0x11, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x67, 0x65, 0x43, 0x65, 0x72,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0c, 0x6a, 0x77,
	0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6a, 0x77, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0a,
	0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x4a, 0x77, 0x74, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x52, 0x09,
	0x66, 0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x4a, 0x77,
	0x74, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x52, 0x07, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x12,
	0x41, 0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x4a, 0x77, 0x74, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x73, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x73, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x5f,
	0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x12, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x41, 0x75, 0x64, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x62, 0x6c,
	0x75, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x42, 0x6c, 0x75, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x39, 0x0a,
	0x09, 0x62, 0x61, 0x63, 0x6b, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x4a, 0x77, 0x74, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x52, 0x09, 0x62,
	0x61, 0x63, 0x6b, 0x64, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2d,
	0x0a, 0x05, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x4a, 0x77, 0x74, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x43, 0x6c, 0x69, 0x70, 0x73, 0x52, 0x05, 0x63, 0x6c, 0x69, 0x70, 0x73, 0x12, 0x2e, 0x0a,
	0x13, 0x63, 0x69, 0x6e, 0x65, 0x6d, 0x61, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x69, 0x6e, 0x65,
	0x6d, 0x61, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x22, 0x33, 0x0a,
	0x03, 0x52, 0x6f, 0x77, 0x12, 0x2c, 0x0a, 0x05, 0x74, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x4a, 0x77, 0x74, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x69, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x69, 0x6c,
	0x65, 0x73, 0x22, 0xfa, 0x01, 0x0a, 0x06, 0x54, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x6d, 0x61, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x65, 0x6d, 0x61, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x67,
	0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e,
	0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x61, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x32,
	0xd0, 0x01, 0x0a, 0x10, 0x4a, 0x77, 0x74, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x6a, 0x77, 0x74, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x2e, 0x4a, 0x77, 0x74, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x16, 0x2e, 0x4a, 0x77, 0x74, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x54, 0x69, 0x6c, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x12,
	0x1a, 0x2f, 0x6a, 0x77, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x7b, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73,
	0x7d, 0x2f, 0x7b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x7d, 0x12, 0x55, 0x0a, 0x0e, 0x50,
	0x6f, 0x73, 0x74, 0x6a, 0x77, 0x74, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x18, 0x2e,
	0x4a, 0x77, 0x74, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x54, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x15, 0x2e, 0x4a, 0x77, 0x74, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x6f, 0x77, 0x22, 0x12,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x22, 0x07, 0x2f, 0x6a, 0x77, 0x70, 0x6f, 0x73, 0x74, 0x3a,
	0x01, 0x2a, 0x42, 0x36, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x77, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x2d, 0x54, 0x65, 0x63,
	0x68, 0x6e, 0x6f, 0x6c, 0x6f, 0x67, 0x69, 0x65, 0x73, 0x2f, 0x4a, 0x77, 0x74, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_jwtsearchservice_proto_rawDescOnce sync.Once
	file_jwtsearchservice_proto_rawDescData = file_jwtsearchservice_proto_rawDesc
)

func file_jwtsearchservice_proto_rawDescGZIP() []byte {
	file_jwtsearchservice_proto_rawDescOnce.Do(func() {
		file_jwtsearchservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_jwtsearchservice_proto_rawDescData)
	})
	return file_jwtsearchservice_proto_rawDescData
}

var file_jwtsearchservice_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_jwtsearchservice_proto_goTypes = []interface{}{
	(*Scoring)(nil),     // 0: JwtsearchService.Scoring
	(*Urls)(nil),        // 1: JwtsearchService.Urls
	(*Offers)(nil),      // 2: JwtsearchService.Offers
	(*FullPaths)(nil),   // 3: JwtsearchService.Full_paths
	(*Credits)(nil),     // 4: JwtsearchService.Credits
	(*ExternalIds)(nil), // 5: JwtsearchService.External_ids
	(*Backdrops)(nil),   // 6: JwtsearchService.Backdrops
	(*Clips)(nil),       // 7: JwtsearchService.Clips
	(*Tile)(nil),        // 8: JwtsearchService.Tile
	(*Row)(nil),         // 9: JwtsearchService.Row
	(*TvInfo)(nil),      // 10: JwtsearchService.TvInfo
}
var file_jwtsearchservice_proto_depIdxs = []int32{
	1,  // 0: JwtsearchService.Offers.urls:type_name -> JwtsearchService.Urls
	0,  // 1: JwtsearchService.Tile.scoring:type_name -> JwtsearchService.Scoring
	2,  // 2: JwtsearchService.Tile.offers:type_name -> JwtsearchService.Offers
	3,  // 3: JwtsearchService.Tile.full_paths:type_name -> JwtsearchService.Full_paths
	4,  // 4: JwtsearchService.Tile.credits:type_name -> JwtsearchService.Credits
	5,  // 5: JwtsearchService.Tile.external_ids:type_name -> JwtsearchService.External_ids
	6,  // 6: JwtsearchService.Tile.backdrops:type_name -> JwtsearchService.Backdrops
	7,  // 7: JwtsearchService.Tile.clips:type_name -> JwtsearchService.Clips
	8,  // 8: JwtsearchService.Row.tiles:type_name -> JwtsearchService.Tile
	10, // 9: JwtsearchService.JwtsearchService.Getjwtdetails:input_type -> JwtsearchService.TvInfo
	10, // 10: JwtsearchService.JwtsearchService.Postjwtdetails:input_type -> JwtsearchService.TvInfo
	8,  // 11: JwtsearchService.JwtsearchService.Getjwtdetails:output_type -> JwtsearchService.Tile
	9,  // 12: JwtsearchService.JwtsearchService.Postjwtdetails:output_type -> JwtsearchService.Row
	11, // [11:13] is the sub-list for method output_type
	9,  // [9:11] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_jwtsearchservice_proto_init() }
func file_jwtsearchservice_proto_init() {
	if File_jwtsearchservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_jwtsearchservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scoring); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jwtsearchservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Urls); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jwtsearchservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Offers); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jwtsearchservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullPaths); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jwtsearchservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jwtsearchservice_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExternalIds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jwtsearchservice_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Backdrops); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jwtsearchservice_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Clips); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jwtsearchservice_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jwtsearchservice_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Row); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_jwtsearchservice_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TvInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_jwtsearchservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_jwtsearchservice_proto_goTypes,
		DependencyIndexes: file_jwtsearchservice_proto_depIdxs,
		MessageInfos:      file_jwtsearchservice_proto_msgTypes,
	}.Build()
	File_jwtsearchservice_proto = out.File
	file_jwtsearchservice_proto_rawDesc = nil
	file_jwtsearchservice_proto_goTypes = nil
	file_jwtsearchservice_proto_depIdxs = nil
}
